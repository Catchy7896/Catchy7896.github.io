[{"title":"快捷键指南","url":"/Tools/快捷键/","content":"```\n🍒 欢迎光临Catchy的博客~\n🍒 本文主要梳理\n🍒 我是Catchy，一个正在努力学前端和为写论文掏心掏肺的enfp小兔子🐰\n```\n# Windows 10常用快捷键\n## 常用快捷键\n- 打开文件管理器：Win + E\n- 打开任务栏：Win + 1/2/3/4/5/6/7/8/9\n- 切换窗口：Alt + Tab\n## 其他\n- 1、显示桌面、最小化桌面：Win+D\n- 2、锁定桌面：Win+L\n- 3、打开文件管理器：Win+ E\n- 4、Windows原图截图：Win + Shift + S\n- 5、打开操作中心：Win+A\n- 6、打开搜索：Win + S\n- 7、时间轴、查看任务视图：Win + Tab\n- 8、打开运行窗口：Win + R\n- 9、打开任务管理器：Ctrl + Shift + Esc\n- 10、任务切换：Alt + Tab\n- 11、窗口排版：Win + →/↑/←/↓\n- 12、针对固定在快速启动栏中的程序，按照数字排序打开相应程序[Win+ 数字键（1-9）]\n- 13、打开开始菜单：Ctrl + Esc\n- 14、查看文件属性：Alt + 鼠标双击文件\n- 15、关闭当前程序或窗口：Alt + F4\n- 16、放大镜：\n    - Win + + 打开系统放大镜\n    - Win + - 缩小放大镜\n    - Win + Esc 关闭放大镜\n- 17、虚拟桌面：\n    - Win + Ctrl + D 创建虚拟桌面\n    - Win + Ctrl + F4 关闭当前虚拟桌面\n    - Win + Ctrl + ← 向左切换虚拟桌面\n    - Win + Ctrl + → 向右切换虚拟桌面\n- 18、粘贴板：\n    - Win +V 跳出粘贴板历史，图片也支持。\n# 谷歌浏览器快捷键\n## 常用\n- 收藏：Ctrl + D\n- 收藏所有标签页：Ctrl + Shift + D\n## 其他\n- 同个窗口新建标签：Ctrl + T\n- 新建窗口：Ctrl + N\n- 关闭当前标签页：Ctrl + W\n- 关闭当前窗口：Ctrl + Shift + W\n- 关闭所有窗口：Ctrl + Shift + Q\n- 打开历史记录：Ctrl + H\n- 打开下载：Ctrl + J\n- 打开书签：Ctrl + E\n\n<b>鸣谢</b>\n[1] https://blog.csdn.net/weixin_38256474/article/details/90378846\n\n---\n\n感谢你耐心阅读这篇文章，希望能为你带来一些帮助和启发。如果你喜欢这篇文章，欢迎分享给更多的朋友。\n","tags":["效率"],"categories":["Tools"]},{"title":"SQL","url":"/Tools/SQL/","content":"```\n🍒 欢迎光临Catchy的博客~\n🍒 本文主要梳理\n🍒 我是Catchy，一个正在努力学前端和为写论文掏心掏肺的enfp小兔子🐰\n```\n\n# 常用语法：\n- 统计总数：`SELECT COUNT(*) FROM table_name;`\n- 统计某列的唯一值数量：`SELECT COUNT(DISTINCT column_name) FROM table_name;`\n- 统计某列的平均值：`SELECT AVG(column_name) FROM table_name;`\n- 统计某列的最大值：`SELECT MAX(column_name) FROM table_name;`\n- 统计某列的最小值：`SELECT MIN(column_name) FROM table_name;`\n- 统计某列的总和：`SELECT SUM(column_name) FROM table_name;`\n- 分组统计：`SELECT column_name, COUNT(*) FROM table_name GROUP BY column_name;`\n- 条件查询：`SELECT * FROM table_name WHERE condition;`\n- 排序查询：`SELECT * FROM table_name ORDER BY column_name ASC/DESC;`\n- 分页查询：`SELECT * FROM table_name LIMIT offset, count;`\n- 连接查询：`SELECT * FROM table1 JOIN table2 ON table1.column_name = table2.column_name;`\n- 子查询：`SELECT * FROM table_name WHERE column_name IN (SELECT column_name FROM another_table);`\n- 聚合查询：`SELECT column_name, COUNT(*) FROM table_name GROUP BY column_name;`\n- 分组查询：`SELECT column_name, COUNT(*) FROM table_name GROUP BY column_name;`\n# 常用函数：\n- 字符串函数：`CONCAT(str1, str2, ...)`、`SUBSTRING(str, start, length)`、`LENGTH(str)`、`UPPER(str)`、`LOWER(str)`、`REPLACE(str, old_str, new_str)`\n- 日期函数：`CURDATE()`、`CURTIME()`、`NOW()`、`DATE_FORMAT(date, format)`、`DATE_ADD(date, INTERVAL expr unit)`、`DATEDIFF(date1, date2)`\n- 数学函数：`ABS(number)`、`ROUND(number, decimals)`、`CEIL(number)`、`FLOOR(number)`、`RAND()`、`POWER(base, exponent)`\n- 聚合函数：`COUNT(*)`、`SUM(column)`、`AVG(column)`、`MAX(column)`、`MIN(column)`\n- 条件函数：`IF(condition, value1, value2)`、`CASE WHEN condition THEN value1 ELSE value2 END`\n- 窗口函数：`ROW_NUMBER() OVER (PARTITION BY column ORDER BY column)`、`RANK() OVER (PARTITION BY column ORDER BY column)`、`DENSE_RANK() OVER (PARTITION BY column ORDER BY column)`\n---\n## 应用\n应用场景1：统计学生的平均成绩\n```sql\nSELECT AVG(score) FROM students;\n```\n应用场景2：查询某个班级的学生人数\n```sql\nSELECT COUNT(*) FROM students WHERE class_id = 1;\n```\n应用场景3：查询成绩最高的学生\n```sql\nSELECT * FROM students ORDER BY score DESC LIMIT 1;\n```\n应用场景4：查询每个班级的平均成绩\n```sql\nSELECT class_id, AVG(score) FROM students GROUP BY class_id;\n```\n应用场景5：查询成绩高于80分的学生\n```sql\nSELECT * FROM students WHERE score > 80;\n```\n应用场景6：查询每个班级的学生人数\n```sql\nSELECT class_id, COUNT(*) FROM students GROUP BY class_id;\n```\n应用场景7：查询每个班级的学生人数，并按照人数降序排序\n```sql\nSELECT class_id, COUNT(*) FROM students GROUP BY class_id ORDER BY COUNT(*) DESC;\n```\n应用场景8：查询每个班级的学生人数，并按照人数降序排序，只显示前3名\n```sql\nSELECT class_id, COUNT(*) FROM students GROUP BY class_id ORDER BY COUNT(*) DESC LIMIT 3;\n```\n### 辅助工具\n1.自学Sql网：http://xuesql.cn/lesson/select_queries_introduction\n2.产品经理需要掌握SQL到什么程度?https://www.zhihu.com/question/483602934\n3.菜鸟教程SQL文档：https://www.runoob.com/sql/sql-tutorial.html\n---\n感谢你耐心阅读这篇文章，希望能为你带来一些帮助和启发。如果你喜欢这篇文章，欢迎分享给更多的朋友。\n","tags":["数据处理"],"categories":["Tools"]},{"title":"代码随想录读书笔记","url":"/learn/代码随想录读书笔记/","content":"```\n🍒 欢迎光临Catchy的博客~\n🍒 本文主要梳理在学习代码随想录的知识点记录和一些思考\n🍒 我是Catchy，一个正在努力学前端和为写论文掏心掏肺的enfp小兔子🐰\n```\n# 1 前言\t\n\n​&ensp;&ensp;&ensp;算法是程序员的基本功，考验一个人的代码能力和思维能力。当然计算机网络、操作系统、数据库这种基础知识也挺重要的，可以看自己的工作也学习一下。\n\n​\t&ensp;&ensp;&ensp;当然算法第一步一定要学编程语言，不要操之过急。另外，代码规范很重要，主要是**命名规范**和**代码留白**这两个。\n\n - 命名规范：大驼峰、小驼峰\n\n   - 大驼峰:MyClass\n   - 小驼峰:myClass\n\n - 代码留白：\n\n   - 分隔符逗号，分号：前不留后留\n\n   - for、if、while:后面都要留空\n\n   - 操作符：左右都留空\n\n   - 第一个花括号和while要在一行且花括号前面也要留空\n\n     一个简单的示例：\n     \n     ```\n     for (i = i + 1; i > n; i++) {\n     \n     }\n     \n     ```\n\n​\t&ensp;&ensp;&ensp;算法的性能：时间复杂度和空间复杂度，每个遇到的代码题目都应该考虑这两个度量。\n\n# 2 数组\n\n​\t&ensp;&ensp;&ensp;数组这一章节我学到了三个算法思想：不变量、快慢指针、滑动窗口。\n\n## 2.1 不变量\n\n​\t&ensp;&ensp;&ensp;二分查找法里面的区间问题、就是这种涉及边界的问题，都是和区间不变量相关系的。如果控制好不变量，后面就可以根据不变量来写下面的边界判断等问题。\n\n​\t&ensp;&ensp;&ensp;在螺旋矩阵的时候也讲过这个概念，也是for循环里面的i,j边界怎么判断，只要决定好区间，就可以根据区间定义来。\n\n​\t&ensp;&ensp;&ensp;以二分查找给出示例:到底是left < right 还是 left <= right？曾经我也深受这个问题困扰，大概是死记硬背比较多，但是其实如果我们把这个问题转换为我们的区间定义问题就会好办很多，这里给出left <= right 的思路。\n\n​\t&ensp;&ensp;&ensp;我决定区间[left，right]那么left <= right就在我的区间范围内，right = mid - 1 。右边已经取过了，所以mid需要减1.我决定区间[left，right）那么left < right就在我的区间范围内，right = mid 因为右边是打开的所以右边取不到。\n\n## 2.2 快慢指针\n\n​\t&ensp;&ensp;&ensp;快慢指针可以解决移除元素的问题，就是设置两个指针，一个在前一个在后，从而解决移除元素中，在原地更改数据的问题。\n\n## 2.3 滑动窗口\n\n​\t&ensp;&ensp;&ensp;我感觉这个和快慢指针有点像，也是一前一后，窗口就是分为起始位置、结束位置、以及窗口的长度，窗口是连续的。这里就是用来解决在数组中返回符合长度大于s的连续数组的最小长度，感觉很绕！其实就是我们最后选中的窗口里面符合两个条件：和大于s,长度最小。\n\n​\t&ensp;&ensp;&ensp;这个算法难点就在于怎么控制窗口长度和起始位置，我们可以先扩大窗口，当满足我们条件大于s时，控制起始位置从而缩短窗口看一下有没有更好的结果，这里有个代码是关键就是 sum =- nums[i++]。它的意思就是将窗口从前往后缩，这样如果我们能找到更好的结果，以后我们的窗口大小又变小了，好神奇，感觉窗口很动态了。\n\n\n\n\n\n\n\n**鸣谢：**\n    《代码随想录》\n\n---\n\n感谢你耐心阅读这篇文章，希望能为你带来一些帮助和启发。如果你喜欢这篇文章，欢迎分享给更多的朋友。\n","tags":["算法"],"categories":["learn"]},{"title":"常用的prompt","url":"/AI/常用的prompt/","content":"```\n🍒 欢迎光临Catchy的博客~\n🍒 本文主要梳理一些在常用的prompt\n🍒 我是Catchy，一个正在努力学前端和为写论文掏心掏肺的enfp小兔子🐰\n```\n# 1 论文常用prompt:\n\n    1.请简要概括文章摘要部分，尽量简短，但不要省略数据部分。\n    2.本文有哪些创新点，或者有哪些工作量？（采用了哪些算法、模型等）它们带来的效果分别是什么？\n    3.本文光谱预处理用了什么方法？为什么？\n    4.本文用于实验的数据有多少条？本文是否使用了数据增强的方法？为什么？\n    5.在模型设计方面，本文利用了什么模型，为什么？最后的结果？\n    6.本文在模型和算法使用中运用了哪些评估标准？\n\n---\n\n感谢你耐心阅读这篇文章，希望能为你带来一些帮助和启发。如果你喜欢这篇文章，欢迎分享给更多的朋友。\n","tags":["prompt"],"categories":["AI"]},{"title":"hexo注意事项","url":"/hexo/hexo注意事项/","content":"```\n🍒 欢迎光临Catchy的博客~\n🍒 本文主要梳理hexo如何配置以及一些注意事项~\n🍒 我是Catchy，一个正在努力学前端和为写论文掏心掏肺的enfp小兔子🐰\n```\n\n# 1 配置\nnode_modules: 依赖包\npublic：存放生成的页面\nscaffolds：生成文章的一些模板\nsource：用来存放你的文章\nthemes：主题\n## 1.1 配置样式\n\n### 关闭hexo自带的首行缩进\n进入根目录的_config.yml文件下添加：\n```\npost_style:\n    indent: 0\n```\n### 头像配置\n- 头像设置\n    - 在根目录的source文件夹下创建一个img文件夹下面放置你要设置的头像：source\\img\\avatar.jpg\n\n- 头像圆角\n```\navatar_style:\n  radius: true\n\n```\n### 网页图标\n在头像配置创建的img文件夹里放置source\\img\\favicon.ico\n\n### 底部社交平台\n底部支持一些社交平台地址，支持以下几种：\n\n```\nweibo_username:     3286578617\nzhihu_username:     ai-er-lan-xue-da\ngithub_username:    AirCloud\ntwitter_username:   iconie_alloy\nfacebook_username:  xiaotao.nie.5\nlinkedin_username:  小涛-聂-80964aba\n```\n\n# 2 发布文章\n\n```\nhexo new '文章题目'\n```\n①scaffolds\\post.md:文章的模板\n②source\\ _posts：在这里可以看到发的文章，进行内容编辑，也可以删除不想要的文章。\n③public：存放的根据md生成的页面\n\n<b>注意：</b>\n每次更改数据后都要执行下面三个命令：\n- 清除缓存文件:hexo clean\n- 生成静态文件:hexo g = hexo generate\n- 上传到github：hexo deploy =hexo d\n\n# 3 一些注意事项\n\n- 出现文章进入网页后无法预览的情况：检查根目录_config.yml配置文件的permalink参数后面的title是否有/:permalink: :category/:title/\n\n- 文章不能有跳级（一级标题下面有三级标题又有一个二级标题）\n\n- 要使用hexo new page tags about来创建标签和关于的文件夹，否则没有索引，会显示空白，读不到样式。\n\n- 若出现git报错，可以删除.deploy_git文件夹，然后重新依次执行以下命令：\n```\ngit config --global core.autocrlf false\nhexo d\n```\n\n<b>感想：</b>\n  完成本次博客搭建，并不是想象中那么顺利，开始配置环境出现了一些权限的错误，导致包一直安装不上。搭建好主题后，又在摸索其他配置的设置，毕竟女孩子是爱美的！当然是先让网页美美的啦，当然目前也仍然很多可以改进的地方，不过我打算先用来做笔记和记录生活，后面UI的部分慢慢来咯。不过顺利完成第一篇文章的发表，我也算正式拥有了一个属于自己的博客了！这就是计算机带给我的快乐吧~不管怎么样，我都会再接再厉，努力提升自己，打造属于自己的一片天地~~\n<b>鸣谢：</b>\n- https://github.com/aircloud/hexo-theme-aircloud\n\n---\n\n感谢你耐心阅读这篇文章，希望能为你带来一些帮助和启发。如果你喜欢这篇文章，欢迎分享给更多的朋友。\n","tags":["hexo"],"categories":["hexo"]}]